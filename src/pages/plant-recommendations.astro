---
import Layout from '../layouts/Layout.astro';
import PlantRecommendationForm from '../components/plants/PlantRecommendationForm';
import PlantRecommendations from '../components/plants/PlantRecommendations';
---

<Layout title="Plant Recommendations">
  <main class="container mx-auto px-4 py-8">
    <h1 class="text-3xl font-bold mb-2 text-center">Find the Perfect Plants for Your Irish Garden</h1>
    <p class="text-center text-base-content/70 mb-8 max-w-2xl mx-auto">
      Our plant recommendation system uses your garden conditions to suggest plants that will thrive in your specific Irish garden, promoting sustainability and biodiversity.
    </p>

    <div class="grid grid-cols-1 lg:grid-cols-3 gap-6">
      <div>
        <div id="recommendation-form"></div>

        <div class="card bg-base-100 shadow-xl mt-6">
          <div class="card-body">
            <h3 class="font-bold text-lg">Why This Matters</h3>
            <div class="py-2">
              <ul class="list-disc list-inside text-sm space-y-2">
                <li>Plants suited to your conditions are healthier and require fewer resources</li>
                <li>Native plants support local pollinators and wildlife</li>
                <li>Matching plants to soil type reduces the need for amendments</li>
                <li>Well-matched plants are more resistant to pests and diseases</li>
                <li>Sustainable gardening practices benefit the environment</li>
              </ul>
            </div>
            <div class="card-actions mt-2">
              <div class="stats stats-vertical shadow w-full">
                <div class="stat">
                  <div class="stat-title">Gardens in Ireland</div>
                  <div class="stat-value text-primary">1.2M+</div>
                  <div class="stat-desc">Potential for positive impact</div>
                </div>
                <div class="stat">
                  <div class="stat-title">Native Species</div>
                  <div class="stat-value text-secondary">800+</div>
                  <div class="stat-desc">Support local ecosystems</div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <div class="lg:col-span-2" id="results-container">
        <div class="card bg-base-100 shadow-xl h-full">
          <div class="card-body flex flex-col justify-center items-center text-center p-8">
            <h2 class="card-title text-2xl mb-4">Your Recommendations Will Appear Here</h2>
            <p class="mb-6">Fill out the form to get personalized plant recommendations for your garden.</p>
            <div class="mb-6">
              <svg xmlns="http://www.w3.org/2000/svg" class="w-24 h-24 opacity-20" viewBox="0 0 24 24">
                <path fill="currentColor" d="M15,21H9V12H3L12,3L21,12H15V21Z" />
              </svg>
            </div>
            <div class="text-sm opacity-70">
              <p>Our recommendation engine considers your location, soil type, sunlight, and preferences</p>
            </div>
          </div>
        </div>
      </div>
    </div>
  </main>
</Layout>

<script>
  // Client-side code to handle form submission and display results
  import React from 'react';
  import ReactDOM from 'react-dom';
  import PlantRecommendationForm from '../components/plants/PlantRecommendationForm';
  import PlantRecommendations from '../components/plants/PlantRecommendations';

  document.addEventListener('DOMContentLoaded', () => {
    const formContainer = document.getElementById('recommendation-form');
    const resultsContainer = document.getElementById('results-container');
    let isLoading = false;
    let recommendations = [];

    async function fetchRecommendations(formData) {
      isLoading = true;
      renderComponents();

      try {
        const response = await fetch('/api/plant-recommendations', {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          },
          body: JSON.stringify(formData)
        });

        if (!response.ok) {
          throw new Error('Failed to fetch recommendations');
        }

        const data = await response.json();
        recommendations = data.recommendations;
      } catch (error) {
        console.error('Error fetching recommendations:', error);
        recommendations = [];
      } finally {
        isLoading = false;
        renderComponents();
      }
    }

    function renderComponents() {
      // Render the form
      ReactDOM.render(
        React.createElement(PlantRecommendationForm, {
          onSubmit: fetchRecommendations,
          isLoading
        }),
        formContainer
      );

      // Render the results
      ReactDOM.render(
        React.createElement(PlantRecommendations, {
          recommendations,
          isLoading
        }),
        resultsContainer
      );
    }

    // Initial render
    renderComponents();
  });
</script>