---
import Layout from '../layouts/Layout.astro';
---

<Layout title="Plant Growing Guide | Irish Garden Assistant">
    <main class="container mx-auto px-4 py-8">
        <h1 class="text-3xl font-bold text-center text-emerald-800 mb-2">Detailed Plant Growing Guide</h1>
        <p class="text-center text-gray-600 mb-8" id="plant-title">Loading plant information...</p>
        
        <div class="max-w-4xl mx-auto">
            <div id="loading" class="text-center py-12">
                <div class="inline-block animate-spin rounded-full h-12 w-12 border-t-2 border-b-2 border-emerald-500"></div>
                <p class="mt-4 text-gray-600">Generating comprehensive guide...</p>
            </div>
            
            <div id="error" class="hidden bg-red-50 p-6 rounded-lg text-center">
                <h2 class="text-xl font-bold text-red-700 mb-2">Error</h2>
                <p class="text-red-600" id="error-message">Failed to load plant guide.</p>
            </div>
            
            <div id="guide-container" class="hidden">
                <div class="bg-white rounded-lg shadow-md overflow-hidden">
                    <div class="p-6">
                        <div class="flex justify-between items-start mb-4">
                            <div>
                                <h2 id="plant-name" class="text-2xl font-bold text-emerald-700"></h2>
                                <p id="plant-latin" class="text-gray-600 italic"></p>
                            </div>
                            <div class="flex space-x-2">
                                <span id="native-badge" class="hidden px-2 py-1 text-xs font-medium rounded-full bg-emerald-100 text-emerald-800">Native</span>
                                <span id="perennial-badge" class="hidden px-2 py-1 text-xs font-medium rounded-full bg-blue-100 text-blue-800">Perennial</span>
                            </div>
                        </div>
                        
                        <div class="prose max-w-none" id="guide-content">
                            <!-- Guide content will be inserted here -->
                        </div>
                        
                        <div class="mt-8 pt-4 border-t border-gray-100">
                            <h3 class="text-lg font-semibold text-emerald-700 mb-3">Growing Summary</h3>
                            <div class="grid grid-cols-2 md:grid-cols-4 gap-4 text-sm">
                                <div>
                                    <span class="font-medium block">Water Needs:</span>
                                    <span id="water-needs"></span>
                                </div>
                                <div>
                                    <span class="font-medium block">Sun Exposure:</span>
                                    <span id="sun-needs"></span>
                                </div>
                                <div>
                                    <span class="font-medium block">Soil Preference:</span>
                                    <span id="soil-preference"></span>
                                </div>
                                <div>
                                    <span class="font-medium block">Suitable Soils:</span>
                                    <span id="suitable-soils"></span>
                                </div>
                            </div>
                            
                            <div class="mt-4 grid grid-cols-1 md:grid-cols-2 gap-4">
                                <div id="companions-container" class="hidden">
                                    <span class="font-medium block text-sm">Companion Plants:</span>
                                    <ul id="companions-list" class="mt-1 pl-5 text-sm list-disc"></ul>
                                </div>
                                
                                <div id="pollinators-container" class="hidden">
                                    <span class="font-medium block text-sm">Attracts:</span>
                                    <div id="pollinators-list" class="flex flex-wrap gap-1 mt-1"></div>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="mt-6 text-center">
                    <a href="/graphrag-assistant" class="inline-flex items-center px-4 py-2 bg-emerald-600 text-white rounded-md hover:bg-emerald-700">
                        <svg xmlns="http://www.w3.org/2000/svg" class="h-5 w-5 mr-2" viewBox="0 0 20 20" fill="currentColor">
                            <path fill-rule="evenodd" d="M9.707 16.707a1 1 0 01-1.414 0l-6-6a1 1 0 010-1.414l6-6a1 1 0 011.414 1.414L5.414 9H17a1 1 0 110 2H5.414l4.293 4.293a1 1 0 010 1.414z" clip-rule="evenodd" />
                        </svg>
                        Back to GraphRAG Assistant
                    </a>
                </div>
            </div>
        </div>
    </main>
</Layout>

<script>
    // Extract plant name from URL query parameter
    const urlParams = new URLSearchParams(window.location.search);
    const plantName = urlParams.get('plant');
    
    // Update page title with plant name
    if (plantName) {
        document.getElementById('plant-title').textContent = `Growing Guide for ${plantName}`;
        document.title = `${plantName} Growing Guide | Irish Garden Assistant`;
    } else {
        document.getElementById('loading').classList.add('hidden');
        document.getElementById('error').classList.remove('hidden');
        document.getElementById('error-message').textContent = 'No plant specified. Please select a plant to view its growing guide.';
    }
    
    // Fetch plant guide data
    if (plantName) {
        fetchPlantGuide(plantName);
    }
    
    async function fetchPlantGuide(plantName) {
        try {
            const response = await fetch(`/api/plant-guide?plant=${encodeURIComponent(plantName)}`);
            
            if (!response.ok) {
                throw new Error('Failed to fetch plant guide');
            }
            
            const data = await response.json();
            displayPlantGuide(data);
        } catch (error) {
            console.error('Error fetching plant guide:', error);
            document.getElementById('loading').classList.add('hidden');
            document.getElementById('error').classList.remove('hidden');
            document.getElementById('error-message').textContent = `Failed to load guide for ${plantName}: ${error.message}`;
        }
    }
    
    function displayPlantGuide(data) {
        // Hide loading, show guide
        document.getElementById('loading').classList.add('hidden');
        document.getElementById('guide-container').classList.remove('hidden');
        
        // Set plant details
        document.getElementById('plant-name').textContent = data.plantName;
        
        // Set basic info
        if (data.context && data.context.plant) {
            const plant = data.context.plant;
            
            document.getElementById('plant-latin').textContent = plant.latinName || '';
            document.getElementById('water-needs').textContent = plant.waterNeeds || 'N/A';
            document.getElementById('sun-needs').textContent = plant.sunNeeds || 'N/A';
            document.getElementById('soil-preference').textContent = plant.soilPreference || 'N/A';
            
            // Show badges if applicable
            if (plant.nativeToIreland) {
                document.getElementById('native-badge').classList.remove('hidden');
            }
            
            if (plant.isPerennial) {
                document.getElementById('perennial-badge').classList.remove('hidden');
            }
            
            // Set suitable soils
            if (data.context.suitableSoils && data.context.suitableSoils.length > 0) {
                document.getElementById('suitable-soils').textContent = data.context.suitableSoils.join(', ');
            } else {
                document.getElementById('suitable-soils').textContent = 'N/A';
            }
            
            // Set companions
            if (data.context.companions && data.context.companions.length > 0) {
                const companionsContainer = document.getElementById('companions-container');
                const companionsList = document.getElementById('companions-list');
                
                companionsContainer.classList.remove('hidden');
                data.context.companions.forEach(companion => {
                    const li = document.createElement('li');
                    li.textContent = companion;
                    companionsList.appendChild(li);
                });
            }
            
            // Set pollinators
            if (data.context.pollinators && data.context.pollinators.length > 0) {
                const pollinatorsContainer = document.getElementById('pollinators-container');
                const pollinatorsList = document.getElementById('pollinators-list');
                
                pollinatorsContainer.classList.remove('hidden');
                data.context.pollinators.forEach(pollinator => {
                    const span = document.createElement('span');
                    span.className = 'inline-block px-2 py-1 text-xs bg-amber-100 text-amber-800 rounded-full';
                    span.textContent = pollinator;
                    pollinatorsList.appendChild(span);
                });
            }
        }
        
        // Set guide content (convert markdown to HTML)
        if (data.guide) {
            const guideContent = document.getElementById('guide-content');
            guideContent.innerHTML = markdownToHtml(data.guide);
        }
    }
    
    // Simple markdown to HTML converter (supports headings, lists, paragraphs)
    function markdownToHtml(markdown) {
        if (!markdown) return '';
        
        // Convert headings: # Heading -> <h1>Heading</h1>
        let html = markdown.replace(/^### (.*$)/gm, '<h3 class="text-lg font-semibold text-emerald-700 mt-6 mb-2">$1</h3>');
        html = html.replace(/^## (.*$)/gm, '<h2 class="text-xl font-bold text-emerald-700 mt-8 mb-3">$1</h2>');
        html = html.replace(/^# (.*$)/gm, '<h1 class="text-2xl font-bold text-emerald-700 mt-8 mb-4">$1</h1>');
        
        // Convert lists: - item -> <li>item</li>
        html = html.replace(/^\s*-\s*(.*$)/gm, '<li>$1</li>');
        html = html.replace(/<li>(.+?)<\/li>/g, function(match) {
            if (match.indexOf('<li>') !== match.lastIndexOf('<li>')) {
                return '<ul class="list-disc pl-5 mb-4">' + match + '</ul>';
            }
            return '<ul class="list-disc pl-5 mb-4">' + match + '</ul>';
        });
        
        // Convert numbered lists: 1. item -> <li>item</li>
        html = html.replace(/^\s*\d+\.\s*(.*$)/gm, '<li>$1</li>');
        html = html.replace(/<li>(.+?)<\/li>/g, function(match) {
            if (match.indexOf('<ul') === -1 && match.indexOf('<ol') === -1) {
                return '<ol class="list-decimal pl-5 mb-4">' + match + '</ol>';
            }
            return match;
        });
        
        // Convert paragraphs: line -> <p>line</p>
        html = html.replace(/^(?!<[hou])\s*([^<].+?)\s*$/gm, '<p class="mb-4">$1</p>');
        
        // Remove duplicated list tags
        html = html.replace(/<\/ul>\s*<ul class="list-disc pl-5 mb-4">/g, '');
        html = html.replace(/<\/ol>\s*<ol class="list-decimal pl-5 mb-4">/g, '');
        
        // Convert bold: **text** -> <strong>text</strong>
        html = html.replace(/\*\*(.*?)\*\*/g, '<strong>$1</strong>');
        
        // Convert italic: *text* -> <em>text</em>
        html = html.replace(/\*([^*]+)\*/g, '<em>$1</em>');
        
        return html;
    }
</script>

<style>
    .prose h1 {
        font-size: 1.875rem;
        font-weight: 700;
        margin-top: 2rem;
        margin-bottom: 1rem;
        color: #047857;
    }
    
    .prose h2 {
        font-size: 1.5rem;
        font-weight: 600;
        margin-top: 1.5rem;
        margin-bottom: 0.75rem;
        color: #047857;
    }
    
    .prose h3 {
        font-size: 1.25rem;
        font-weight: 600;
        margin-top: 1.25rem;
        margin-bottom: 0.5rem;
        color: #047857;
    }
    
    .prose p {
        margin-bottom: 1rem;
        line-height: 1.6;
    }
    
    .prose ul,
    .prose ol {
        margin-bottom: 1.25rem;
        padding-left: 1.5rem;
    }
    
    .prose li {
        margin-bottom: 0.375rem;
    }
    
    .prose strong {
        font-weight: 600;
    }
</style>